# traefik-dynamic.yaml
http:
  routers:
    canopy-monitoring:
      rule: Host(`monitoring.{{ env "DOMAIN" }}`)
      service: canopy-monitoring
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
      tls:
        certResolver: https-resolver


    # New router for /wallet redirect (higher priority)
    canopy-node1-wallet-redirect:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && Path(`/wallet`)
      service: canopy-wallet
      priority: 2  # Higher priority than the main wallet router
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - wallet-redirect
      tls:
        certResolver: https-resolver

    canopy-node1-wallet:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && PathPrefix(`/wallet`)
      service: canopy-wallet
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - basic-auth
        - strip-wallet-prefix
      tls:
        certResolver: https-resolver

    # New router for /explorer redirect (higher priority)
    canopy-node1-explorer-redirect:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && Path(`/explorer`)
      service: canopy-explorer
      priority: 2  # Higher priority than the main explorer router
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - explorer-redirect
      tls:
        certResolver: https-resolver

    canopy-node1-explorer:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && PathPrefix(`/explorer`)
      service: canopy-explorer
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - strip-explorer-prefix
      tls:
        certResolver: https-resolver

    canopy-node1-rpc:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && PathPrefix(`/rpc`)
      service: canopy-rpc
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - strip-rpc-prefix
      tls:
        certResolver: https-resolver

    canopy-node1-admin-rpc:
      rule: Host(`node1.{{ env "DOMAIN" }}`) && PathPrefix(`/adminrpc`)
      service: canopy-admin-rpc
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - basic-auth
        - strip-adminrpc-prefix
      tls:
        certResolver: https-resolver
    
    # New router for node2 /wallet redirect (higher priority)
    canopy-node2-wallet-redirect:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && Path(`/wallet`)
      service: canopy-wallet2
      priority: 2  # Higher priority than the main wallet router
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - wallet-redirect
      tls:
        certResolver: https-resolver

    canopy-node2-wallet:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && PathPrefix(`/wallet`)
      service: canopy-wallet2
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - basic-auth
        - strip-wallet-prefix
      tls:
        certResolver: https-resolver

    # New router for node2 /explorer redirect (higher priority)
    canopy-node2-explorer-redirect:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && Path(`/explorer`)
      service: canopy-explorer2
      priority: 2  # Higher priority than the main explorer router
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - explorer-redirect
      tls:
        certResolver: https-resolver

    canopy-node2-explorer:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && PathPrefix(`/explorer`)
      service: canopy-explorer2
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - strip-explorer-prefix
      tls:
        certResolver: https-resolver

    canopy-node2-rpc:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && PathPrefix(`/rpc`)
      service: canopy-rpc2
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - strip-rpc-prefix
      tls:
        certResolver: https-resolver

    canopy-node2-admin-rpc:
      rule: Host(`node2.{{ env "DOMAIN" }}`) && PathPrefix(`/adminrpc`)
      service: canopy-admin-rpc2
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
        - basic-auth
        - strip-adminrpc-prefix
      tls:
        certResolver: https-resolver

    canopy-frontend:
      rule: Host(`frontend.{{ env "DOMAIN" }}`)
      service: canopy-frontend
      priority: 1
      entryPoints:
        - web
        - websecure
      middlewares:
        - https-redirect
      tls:
        certResolver: https-resolver

  services:
    canopy-wallet:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node1:50000/

    canopy-wallet-static:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node1:50000/_next/

    canopy-explorer:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node1:50001

    canopy-explorer-static:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node1:50001/_next/

    canopy-rpc:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://node1:50002/

    canopy-admin-rpc:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://node1:50003/

    canopy-wallet2:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node2:40000

    canopy-explorer2:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://node2:40001

    canopy-rpc2:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://node2:40002/

    canopy-admin-rpc2:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://node2:40003/

    canopy-monitoring:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://grafana:3000/
    
    canopy-frontend:
      loadBalancer:
        passHostHeader: true
        servers:
          - url: http://canopy-frontend:3000
